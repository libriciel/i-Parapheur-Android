image: openjdk:8-jdk

stages:
  - test
  - package

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"
  ANDROID_EMULATOR_VERSION: "24"
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  PROJECT_NAME: "iparapheur-android"

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .gradle/caches


# From https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/
before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -q -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  # Project specific elements
  - echo $KEYSTORE_BASE64 | base64 -d > release.keystore
  - echo $KEYSTORE_PROPERTIES > release-keystore.properties


# <editor-fold desc="Test">


junit:
  stage: test
  script:
    - ./gradlew test


instrumented:
  stage: test
  coverage: '/Total.*?([0-9]{1,3})%/'
  allow_failure: true
  script:
    - android-sdk-linux/tools/bin/sdkmanager --update > update.log
    - android-sdk-linux/tools/bin/sdkmanager "platform-tools" "emulator" "system-images;android-${ANDROID_EMULATOR_VERSION};default;armeabi-v7a" > installEmulator.log
    - echo no | android-sdk-linux/tools/bin/avdmanager create avd -n test -k "system-images;android-${ANDROID_EMULATOR_VERSION};default;armeabi-v7a"
    - android-sdk-linux/emulator/emulator -avd test -no-window -no-audio &
    - chmod +x android-wait-for-emulator.sh
    - ./android-wait-for-emulator.sh
    - adb shell input keyevent 82
    - ./gradlew jacocoTestReport
  after_script:
    - cat build/reports/jacoco/jacocoTestReport/html/index.html


sonarqube:
  stage: test
  only:
    - develop
  script:
    - ./gradlew sonar -Dsonar.host.url=https://sonarqube.libriciel.fr "-Dsonar.login=$SONAR_TOKEN"


# </editor-fold desc="Test">


# <editor-fold desc="Package">


apk:
  stage: package
  script:
    - sed -i "s/\"develop\"/\"$CI_COMMIT_REF_NAME\"/g" src/main/AndroidManifest.xml
    - ./gradlew assembleRelease
  after_script:
    - mkdir $PROJECT_NAME
    - mv build/outputs/apk/release/*.apk $PROJECT_NAME/$PROJECT_NAME-$CI_COMMIT_REF_NAME.apk
  artifacts:
    name: "$PROJECT_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - $PROJECT_NAME/*


# </editor-fold desc="Package">
